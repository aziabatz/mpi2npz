{
	"Graph": {
		"P":                     12,
		"M":                     4,
		"m":                     1048576,
		"S":                     16384,
		"root":                  0,
		"node_names":            ["M0", "M1", "M2", "M3"],
		"capacity":              [3, 3, 3, 3],
		"net":                   "IB",
		"comms": {
			"edges":             [[0, 4], [0, 9], [0, 10], [2, 1], [2, 5], [2, 8], [2, 10], [3, 1], [3, 4], [3, 8], [3, 10], [3, 11], [4, 1], [4, 9], [4, 10], [5, 0], [5, 2], [5, 10], [6, 0], [6, 5], [7, 6], [8, 7], [9, 0], [9, 2], [9, 4], [9, 7], [9, 10], [9, 11], [10, 0], [10, 2], [11, 2], [11, 6], [11, 8], [11, 10]],
			"volume":            [128, 256, 256, 256, 64, 256, 512, 64, 64, 1024, 64, 256, 256, 64, 1024, 1024, 256, 512, 256, 128, 64, 512, 1024, 1024, 512, 1024, 128, 512, 1024, 512, 512, 1024, 1024, 128],
			"n_msgs":            [128, 256, 256, 256, 64, 256, 512, 64, 64, 1024, 64, 256, 256, 64, 1024, 1024, 256, 512, 256, 128, 64, 512, 1024, 1024, 512, 1024, 128, 512, 1024, 512, 512, 1024, 1024, 128],
			"opt_nodes_feats":   {},
			"opt_edges_feats":   {}
		}
	},

	"Config": {
		"reward_type":          "num_msgs",
		"verbosity":            "NONE",
		"verbosity_interval":   500
	},

	"Hyperparameters": {
		"n_episodes":           10000,
		"gamma":                0.95,
		"alpha":                0.0001,
		"K":                    4,
		"Baseline":							false
	},

	"Policy": {
		"type":			        "PtrNet",
		"optimizer":            "Adam",
		"typecell":             "LSTM",
		"n_outputs":            4,
		"n_embed": 				128,
		"n_hidden":             128,
		"init_min":				-0.08,
		"init_max":				0.08,
		"node_selector":		"sampling"
	},

	"GNN": {
		"type":                 "Node2Vec",
		"dimensions":           128,
		"n_walks":              100,
		"walk_length":          3
	},

	"Output": {
		"graph_file":           "./random_12_4.png",
		"output_file":          "./random_12_4.json"
	},

	"Benchmark": {
		"name":             "random_12_4",
	  "description":      "Random Graph P=12 M=4",
		"exec":         	    "./Env/tLop/bcast",
		"opts":         		"./Env/tLop/random_12_4.json",
		"collective":           "MPI_Bcast",
		"algorithm":            "Graph-Based",
		"platform":             "CIEMAT",
		"n_iter":               1,
		"optimal_mapping":      [0, 2, 3, 1, 2, 0, 2, 3, 1, 3, 0, 1],
		"optimal_type":         "OTHER"
	}
}
